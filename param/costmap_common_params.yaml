# max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
# robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kob　uki: 0.18)
footprint: [[-0.3,-0.3], [0.95,-0.3], [0.95,0.3], [-0.3,0.3]]  # if the robot is not circular
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

map_type: voxel

obstacle_layer:
  enabled:              true
  # max_obstacle_height:  0.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5           # この範囲内でのみマップへ障害物を挿入
  raytrace_range: 3.0           # この範囲内でのみレイトレースでマップをクリアリング
  origin_z: 0.0
  z_resolution: 0.2             # 各ボクセルの高さ
  z_voxels: 2                   # ボクセルを縦に積む個数，これだと40cm・・・？
  publish_voxel_map: false
  observation_sources:  scan
  scan:
    data_type: LaserScan
    topic: scan
    marking: true               # マップへの障害物挿入に利用
    clearing: true              # マップの障害物除去に利用
    # min_obstacle_height: 0    # これより高さの低い観測点は排除，デフォルトで0.0
    # max_obstacle_height: 1.0  # これより高さの高い観測点は排除，デフォルトで2.0

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # コスト関数の定数．小さいほどコストは上がる(default: 10)
  inflation_radius:     0.5  # 障害物がコストマップに影響を与える範囲

static_layer:
  enabled:              true
